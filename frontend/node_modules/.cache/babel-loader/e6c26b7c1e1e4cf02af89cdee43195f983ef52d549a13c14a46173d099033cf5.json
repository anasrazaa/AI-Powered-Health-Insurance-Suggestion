{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anasr\\\\Downloads\\\\HI\\\\RAG-For-Research-v3\\\\RAG-For-Research-v3\\\\frontend\\\\src\\\\components\\\\Tooltip.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { HelpCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tooltip = ({\n  children,\n  content,\n  position = \"top\"\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\"\n  };\n  const arrowClasses = {\n    top: \"top-full left-1/2 transform -translate-x-1/2 border-t-gray-800\",\n    bottom: \"bottom-full left-1/2 transform -translate-x-1/2 border-b-gray-800\",\n    left: \"left-full top-1/2 transform -translate-y-1/2 border-l-gray-800\",\n    right: \"right-full top-1/2 transform -translate-y-1/2 border-r-gray-800\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block\",\n    onMouseEnter: () => setIsVisible(true),\n    onMouseLeave: () => setIsVisible(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-flex items-center gap-1 cursor-help\",\n      children: [children, /*#__PURE__*/_jsxDEV(HelpCircle, {\n        className: \"w-4 h-4 text-gray-400 hover:text-gray-600 transition-colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isVisible && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.95\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.95\n        },\n        transition: {\n          duration: 0.15\n        },\n        className: `absolute z-50 ${positionClasses[position]} w-64 p-3 bg-gray-800 text-white text-sm rounded-lg shadow-lg`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute w-0 h-0 border-4 border-transparent ${arrowClasses[position]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Predefined tooltips for common insurance terms\n_s(Tooltip, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c = Tooltip;\nexport const InsuranceTermTooltip = ({\n  term,\n  children\n}) => {\n  const tooltipContent = {\n    'Deductible': 'The amount you pay for covered health care services before your insurance plan starts to pay. For example, with a $1,500 deductible, you pay the first $1,500 of covered services yourself.',\n    'Out of Pocket Max': 'The most you have to pay for covered services in a plan year. After you spend this amount on deductibles, copayments, and coinsurance, your health plan pays 100% of the costs of covered benefits.',\n    'Annual Cost': 'The total amount you\\'ll pay in a year, including monthly premiums, deductibles, and estimated out-of-pocket costs for your expected healthcare usage.',\n    'Plan Type': 'The type of health insurance plan (PPO, HMO, EPO, HDHP) that determines which doctors you can see, whether you need referrals, and how much you pay for care.',\n    'Premium': 'The amount you pay each month for your health insurance coverage, regardless of whether you use medical services.',\n    'Copay': 'A fixed amount you pay for a covered health care service, usually when you receive the service.',\n    'Coinsurance': 'Your share of the costs of a covered health care service, calculated as a percent of the allowed amount for the service.'\n  };\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: tooltipContent[term] || 'No description available',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c2 = InsuranceTermTooltip;\nexport default Tooltip;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tooltip\");\n$RefreshReg$(_c2, \"InsuranceTermTooltip\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","HelpCircle","jsxDEV","_jsxDEV","Tooltip","children","content","position","_s","isVisible","setIsVisible","positionClasses","top","bottom","left","right","arrowClasses","className","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","scale","animate","exit","transition","duration","_c","InsuranceTermTooltip","term","tooltipContent","_c2","$RefreshReg$"],"sources":["C:/Users/anasr/Downloads/HI/RAG-For-Research-v3/RAG-For-Research-v3/frontend/src/components/Tooltip.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { HelpCircle } from 'lucide-react';\r\n\r\nconst Tooltip = ({ children, content, position = \"top\" }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const positionClasses = {\r\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\r\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\r\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\r\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\"\r\n  };\r\n\r\n  const arrowClasses = {\r\n    top: \"top-full left-1/2 transform -translate-x-1/2 border-t-gray-800\",\r\n    bottom: \"bottom-full left-1/2 transform -translate-x-1/2 border-b-gray-800\",\r\n    left: \"left-full top-1/2 transform -translate-y-1/2 border-l-gray-800\",\r\n    right: \"right-full top-1/2 transform -translate-y-1/2 border-r-gray-800\"\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"relative inline-block\"\r\n      onMouseEnter={() => setIsVisible(true)}\r\n      onMouseLeave={() => setIsVisible(false)}\r\n    >\r\n      <div className=\"inline-flex items-center gap-1 cursor-help\">\r\n        {children}\r\n        <HelpCircle className=\"w-4 h-4 text-gray-400 hover:text-gray-600 transition-colors\" />\r\n      </div>\r\n      \r\n      <AnimatePresence>\r\n        {isVisible && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.95 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.95 }}\r\n            transition={{ duration: 0.15 }}\r\n            className={`absolute z-50 ${positionClasses[position]} w-64 p-3 bg-gray-800 text-white text-sm rounded-lg shadow-lg`}\r\n          >\r\n            <div className={`absolute w-0 h-0 border-4 border-transparent ${arrowClasses[position]}`}></div>\r\n            {content}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Predefined tooltips for common insurance terms\r\nexport const InsuranceTermTooltip = ({ term, children }) => {\r\n  const tooltipContent = {\r\n    'Deductible': 'The amount you pay for covered health care services before your insurance plan starts to pay. For example, with a $1,500 deductible, you pay the first $1,500 of covered services yourself.',\r\n    'Out of Pocket Max': 'The most you have to pay for covered services in a plan year. After you spend this amount on deductibles, copayments, and coinsurance, your health plan pays 100% of the costs of covered benefits.',\r\n    'Annual Cost': 'The total amount you\\'ll pay in a year, including monthly premiums, deductibles, and estimated out-of-pocket costs for your expected healthcare usage.',\r\n    'Plan Type': 'The type of health insurance plan (PPO, HMO, EPO, HDHP) that determines which doctors you can see, whether you need referrals, and how much you pay for care.',\r\n    'Premium': 'The amount you pay each month for your health insurance coverage, regardless of whether you use medical services.',\r\n    'Copay': 'A fixed amount you pay for a covered health care service, usually when you receive the service.',\r\n    'Coinsurance': 'Your share of the costs of a covered health care service, calculated as a percent of the allowed amount for the service.'\r\n  };\r\n\r\n  return (\r\n    <Tooltip content={tooltipContent[term] || 'No description available'}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Tooltip; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}